{"ast":null,"code":"var _jsxFileName = \"/home/drawbridge/Documents/csharp/Todo-Back-Front/Todo-App/react-todo-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport FilterButton from './components/FilterButton';\nimport './App.css';\nconst URI = 'http://localhost:5000/api/todoitems/';\nconst MAP_FILTER = {\n  All: () => true,\n  Completed: task => task.completed,\n  Todo: task => !task.completed\n};\nconst FILTER_NAMES = Object.keys(MAP_FILTER);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const taskList = tasks.map(task => /*#__PURE__*/React.createElement(Todo, {\n    content: task.content,\n    title: task.title,\n    completed: task.isComplete,\n    id: task.id,\n    key: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n  const filterList = FILTER_NAMES.map(name => {\n    /*#__PURE__*/\n    React.createElement(FilterButton, {\n      key: name,\n      name: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    });\n  });\n  const taskNoun = taskList.length > 1 ? 'tasks' : 'task';\n  const remainingTasks = `${taskList.length}  ${taskNoun} remaining`; // async function fetchTodoItems() {\n  //   const response = await fetch(URI);\n  //   response.json()\n  //   .then(response => setTasks(response))\n  //   .catch(err => console.log(err));\n  // }\n  // async function addTask(content) {\n  //   const newTask =  { name: content, completed: false }\n  //   const requestOptions = {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     body: JSON.stringify(newTask)\n  //   };\n  //     const response = await fetch(URI, requestOptions);\n  //     response.json()\n  //     .then(response => setTasks(response))\n  //     .catch(err => console.log(err));\n  //     console.log(response);\n  //     setTasks([...tasks, newTask]);\n  // }\n  // useEffect(() => {\n  //   fetchTodoItems();\n  // },[]);\n\n  function addTask(content, title) {\n    const newTask = {\n      id: 'todo-' + nanoid(),\n      title: title,\n      content: content,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTask = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTask);\n  }\n\n  function deleteTask(id) {\n    const newTaskList = tasks.filter(task => id !== task.id);\n    setTasks(newTaskList);\n  }\n\n  function editTask(id, newContent, newTitle) {\n    const newTaskList = tasks.map(task => {\n      if (id === task.id) {\n        console.log({\n          newContent,\n          newTitle\n        });\n        return { ...task,\n          content: newContent,\n          title: newTitle\n        };\n      }\n\n      return task;\n    });\n    setTasks(newTaskList);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoapp stack-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), filterList, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, remainingTasks), /*#__PURE__*/React.createElement(\"ul\", {\n    role: \"list\",\n    className: \"todo-list stack-large stack-exception\",\n    \"aria-labelledby\": \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, taskList));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/drawbridge/Documents/csharp/Todo-Back-Front/Todo-App/react-todo-frontend/src/App.js"],"names":["React","useState","useEffect","nanoid","Todo","Form","Header","FilterButton","URI","MAP_FILTER","All","Completed","task","completed","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","filter","setFilter","taskList","map","content","title","isComplete","id","toggleTaskCompleted","deleteTask","editTask","filterList","name","taskNoun","length","remainingTasks","addTask","newTask","updatedTask","newTaskList","newContent","newTitle","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport FilterButton from './components/FilterButton';\n\nimport './App.css';\n\nconst URI = 'http://localhost:5000/api/todoitems/';\n\nconst MAP_FILTER = {\n  All: () => true,\n  Completed: task => task.completed,\n  Todo: task => !task.completed\n}\n\nconst FILTER_NAMES = Object.keys(MAP_FILTER);\n\nfunction App(props) {\n\n    const [tasks, setTasks] = useState(props.tasks);\n    const [filter, setFilter] = useState('All');\n\n    const taskList = tasks.map(task => (\n      <Todo \n          content={task.content}\n          title={task.title}\n          completed={task.isComplete}\n          id={task.id}\n          key={task.id}\n          toggleTaskCompleted={toggleTaskCompleted}\n          deleteTask={deleteTask}\n          editTask={editTask}\n          />\n        )\n      );\n  \n    const filterList = FILTER_NAMES.map(name => {\n      <FilterButton  key={name} name={name}/>\n    });\n\n  const taskNoun = taskList.length > 1 ? 'tasks' : 'task'; \n  const remainingTasks = `${taskList.length}  ${taskNoun} remaining`;\n\n    // async function fetchTodoItems() {\n    //   const response = await fetch(URI);\n    //   response.json()\n    //   .then(response => setTasks(response))\n    //   .catch(err => console.log(err));\n    // }\n\n    // async function addTask(content) {\n    //   const newTask =  { name: content, completed: false }\n      \n    //   const requestOptions = {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/json' },\n    //     body: JSON.stringify(newTask)\n    //   };\n  \n    //     const response = await fetch(URI, requestOptions);\n    //     response.json()\n    //     .then(response => setTasks(response))\n    //     .catch(err => console.log(err));\n    //     console.log(response);\n  \n    //     setTasks([...tasks, newTask]);\n    // }\n    \n    // useEffect(() => {\n    //   fetchTodoItems();\n    // },[]);\n\n    function addTask(content, title) {\n      const newTask =  { id: 'todo-'+ nanoid(), title: title, content: content, completed: false }\n      setTasks([...tasks, newTask]);\n    }  \n      \n  function toggleTaskCompleted(id) {\n    const updatedTask = tasks.map(task => {\n      if(id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTask);\n  }\n\n  function deleteTask(id) {\n    const newTaskList = tasks.filter(task => id !== task.id);\n    setTasks(newTaskList);\n  }\n\n  function editTask(id, newContent, newTitle) {\n    const newTaskList = tasks.map(task => {\n      if(id === task.id) {\n        console.log({newContent, newTitle});\n        return {...task, content: newContent, title: newTitle}\n      }\n      return task;\n    });\n    setTasks(newTaskList);\n  }\n\n  return (\n\n    <div className=\"todoapp stack-large\">\n        <Header/>\n        <Form addTask={addTask}/>\n        {filterList}\n        <h2 id=\"list-heading\">\n          {remainingTasks}\n        </h2>\n        <ul\n          role=\"list\"\n          className=\"todo-list stack-large stack-exception\"\n          aria-labelledby=\"list-heading\"\n        >\n          {taskList}\n\n        </ul>\n      </div>\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}