{"ast":null,"code":"var _jsxFileName = \"/home/drawbridge/Documents/csharp/Todo-Back-Front/Todo-App/react-todo-frontend/src/components/Todo.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nexport default function Todo(props) {\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect;\n  }\n\n  const [isEditing, setEditing] = useState(false);\n  const [newContent, setNewContent] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n  const editInputFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  function handleContentUpdate(e) {\n    setNewContent(e.target.value);\n  }\n\n  function handleTitleUpdate(e) {\n    setNewTitle(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newContent, newTitle);\n    setNewContent('');\n    setNewTitle('');\n    setEditing(false);\n  }\n\n  const editingTemplate = /*#__PURE__*/React.createElement(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"New title for: \", props.title), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    className: \"todo-text\",\n    type: \"text\",\n    value: newTitle,\n    onChange: handleTitleUpdate,\n    ref: editInputFieldRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"New content for: \", props.content), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    className: \"todo-text\",\n    type: \"text\",\n    value: newContent,\n    onChange: handleContentUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setEditing(false),\n    className: \"btn todo-cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Cancel\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"renaming \", props.content)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn__primary todo-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Save\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"new name for \", props.name))));\n  const viewTemplate = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: \"checkbox\",\n    defaultChecked: props.completed,\n    onChange: () => props.toggleTaskCompleted(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, props.title, \":\")), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, props.content)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn\",\n    onClick: () => setEditing(true),\n    ref: editButtonRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 18\n    }\n  }, props.content)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn__danger\",\n    onClick: () => props.deleteTask(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Delete \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 20\n    }\n  }, props.content))));\n  useEffect(() => {\n    if (isEditing) {\n      editInputFieldRef.current.focus();\n    } else {\n      editButtonRef.current.focus();\n    }\n  }, [isEditing]);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, isEditing ? editingTemplate : viewTemplate);\n}","map":{"version":3,"sources":["/home/drawbridge/Documents/csharp/Todo-Back-Front/Todo-App/react-todo-frontend/src/components/Todo.js"],"names":["React","useState","useEffect","useRef","Todo","props","usePrevious","value","ref","isEditing","setEditing","newContent","setNewContent","newTitle","setNewTitle","editInputFieldRef","editButtonRef","handleContentUpdate","e","target","handleTitleUpdate","handleSubmit","preventDefault","editTask","id","editingTemplate","title","content","name","viewTemplate","completed","toggleTaskCompleted","deleteTask","current","focus"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nexport default function Todo(props) {\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect\n  }\n  \n  const [isEditing, setEditing] = useState(false);\n  const [newContent, setNewContent] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n\n  const editInputFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  function handleContentUpdate(e) {\n    setNewContent(e.target.value);\n  }\n  function handleTitleUpdate(e) {\n    setNewTitle(e.target.value);\n  }\n  \n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newContent, newTitle);\n    setNewContent('');\n    setNewTitle('');\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New title for: {props.title}\n        </label>\n        <input id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newTitle}\n          onChange={handleTitleUpdate}\n          ref={editInputFieldRef}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New content for: {props.content}\n        </label>\n        <input id={props.id} className=\"todo-text\" type=\"text\" value={newContent} onChange={handleContentUpdate}/>\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" onClick={() => setEditing(false)} className=\"btn todo-cancel\">\n          Cancel\n        <span className=\"visually-hidden\">renaming {props.content}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n        <span className=\"visually-hidden\">new name for {props.name}</span>\n      </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            <b>{props.title}:</b>\n          </label>\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.content}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n          <button \n            type=\"button\"\n            className=\"btn\"\n            onClick={() => setEditing(true)}\n            ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{props.content}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.content}</span>\n          </button>\n        </div>\n    </div>\n  );\n  \n  useEffect(() => {\n    if(isEditing) {\n      editInputFieldRef.current.focus();\n    } else {\n      editButtonRef.current.focus();\n    }\n  }, [isEditing]);\n  \n  return (\n        <li className=\"todo\">\n          {isEditing ? editingTemplate : viewTemplate}\n        </li>\n    );\n}"]},"metadata":{},"sourceType":"module"}