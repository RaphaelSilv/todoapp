{"ast":null,"code":"var _jsxFileName = \"/home/drawbridge/Documents/react/react-hooks/react-counter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport FilterButton from './components/FilterButton';\nimport './App.css';\n\nfunction App(props) {\n  const [tasks, setTasks] = useState([]);\n\n  async function fetchData(uri) {\n    const res = await fetch(uri);\n    res.json().then(res => setTasks(res)).catch(err => console.log(err));\n  }\n\n  useEffect(() => {\n    fetchData('http://localhost:5000/api/todoitems/');\n  }, []);\n  console.log(tasks);\n  const taskList = tasks.map(task => /*#__PURE__*/React.createElement(Todo, {\n    name: task.content,\n    id: task.id,\n    completed: task.completed,\n    key: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n  const taskNoun = taskList.length > 1 ? 'tasks' : 'task';\n  const remainingTasks = `${taskList.length}  ${taskNoun} remaining`;\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updateTask = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updateTask);\n  }\n\n  function deleteTask(id) {\n    const newTaskList = tasks.filter(task => id !== task.id);\n    setTasks(newTaskList);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoapp stack-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    name: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    name: \"Completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    name: \"To do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, remainingTasks), /*#__PURE__*/React.createElement(\"ul\", {\n    role: \"list\",\n    className: \"todo-list stack-large stack-exception\",\n    \"aria-labelledby\": \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, taskList));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/drawbridge/Documents/react/react-hooks/react-counter/src/App.js"],"names":["React","useState","useEffect","nanoid","Todo","Form","Header","FilterButton","App","props","tasks","setTasks","fetchData","uri","res","fetch","json","then","catch","err","console","log","taskList","map","task","content","id","completed","toggleTaskCompleted","deleteTask","taskNoun","length","remainingTasks","addTask","name","newTask","updateTask","newTaskList","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport FilterButton from './components/FilterButton';\n\nimport './App.css';\n\n  function App(props) {\n\n    const [tasks, setTasks] = useState([]);\n\n    async function fetchData(uri) {\n      const res = await fetch(uri);\n      res.json()\n      .then(res => setTasks(res))\n      .catch(err => console.log(err));\n    }\n  \n    useEffect(() => {\n      fetchData('http://localhost:5000/api/todoitems/');\n    },[]);\n\n    console.log(tasks);\n    const taskList = tasks.map(task => (\n      <Todo \n          name={task.content}\n          id={task.id}\n          completed={task.completed}\n          key={task.id}\n          toggleTaskCompleted={toggleTaskCompleted}\n          deleteTask={deleteTask}\n          />\n        )\n      );\n  \n  const taskNoun = taskList.length > 1 ? 'tasks' : 'task'; \n  const remainingTasks = `${taskList.length}  ${taskNoun} remaining`;\n      \n  function addTask(name) {\n    const newTask =  { id: \"todo-\" + nanoid(), name: name, completed: false }\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updateTask = tasks.map(task => {\n      if(id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updateTask);\n  }\n\n  function deleteTask(id) {\n    const newTaskList = tasks.filter(task => id !== task.id);\n    setTasks(newTaskList);\n  }\n\n  return (\n\n    <div className=\"todoapp stack-large\">\n        <Header/>\n        <Form addTask={addTask}/>\n        <FilterButton name=\"All\"/>\n        <FilterButton name=\"Completed\"/>\n        <FilterButton name=\"To do\"/>\n\n        <h2 id=\"list-heading\">\n          {remainingTasks}\n        </h2>\n        <ul\n          role=\"list\"\n          className=\"todo-list stack-large stack-exception\"\n          aria-labelledby=\"list-heading\"\n        >\n          {taskList}\n\n        </ul>\n      </div>\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}