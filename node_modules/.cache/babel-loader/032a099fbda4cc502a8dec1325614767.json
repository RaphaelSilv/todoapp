{"ast":null,"code":"var _jsxFileName = \"/home/drawbridge/Documents/csharp/Todo-Back-Front/Todo-App/react-todo-frontend/src/App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport FilterButton from './components/FilterButton';\nimport './App.css';\nconst URI = `http://localhost:5000/api/todoitems/`;\nconst FILTER_MAP = {\n  All: () => true,\n  Completed: task => task.isComplete,\n  Todo: task => !task.isComplete\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState([]);\n  const [taskById, setTaskById] = useState({});\n  const [filter, setFilter] = useState('All');\n  const prevTaskLength = usePrevious(tasks.length);\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/React.createElement(FilterButton, {\n    key: name,\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }));\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/React.createElement(Todo, {\n    content: task.content,\n    title: task.title,\n    completed: task.isComplete,\n    id: task.id,\n    key: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n  const taskNoun = taskList.length > 1 ? 'tasks' : 'task';\n  const remainingTasks = `${taskList.length}  ${taskNoun} remaining`;\n\n  async function fetchTodos() {\n    const apiUrl = URI;\n    const response = await fetch(apiUrl);\n    const json = await response.json();\n    setTasks(json);\n  }\n\n  async function fetchTodoById(id) {\n    const apiUrl = URI + id;\n    const response = await fetch(apiUrl);\n    const json = await response.json();\n    console.log(json);\n    var todo = {\n      title: json.title,\n      content: json.content,\n      isComplete: !json.isComplete\n    };\n    console.log(todo);\n    setTaskById(todo);\n  }\n\n  async function addTask(content, title) {\n    const newTask = {\n      title: title,\n      content: content\n    };\n    const response = await fetch(URI, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify(newTask)\n    });\n    console.log(response.json());\n    fetchTodos();\n  }\n\n  async function toggleTaskCompleted(id) {\n    fetchTodoById(id);\n    console.log(taskById);\n    const response = await fetch(URI + id, {\n      method: 'PUT',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify(taskById)\n    });\n    console.log(response.json());\n  }\n\n  async function deleteTask(id) {\n    const response = await fetch(URI + id, {\n      method: 'DELETE'\n    });\n    console.log(response.json());\n    fetchTodos();\n  }\n\n  async function editTask(id, newTodo) {\n    const updatedTask = {\n      id: id,\n      title: newTodo.title,\n      content: newTodo.content\n    };\n    const response = await fetch(URI + id, {\n      method: 'PUT',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    console.log(response.json());\n    fetchTodos();\n  }\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  const listHeadingRef = useRef(null);\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoapp stack-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), filterList, /*#__PURE__*/React.createElement(\"ul\", {\n    role: \"list\",\n    className: \"todo-list stack-large stack-exception\",\n    \"aria-labelledby\": \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"list-heading\",\n    tabIndex: \"-1\",\n    ref: listHeadingRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, remainingTasks), taskList));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/drawbridge/Documents/csharp/Todo-Back-Front/Todo-App/react-todo-frontend/src/App.js"],"names":["React","useState","useRef","useEffect","Todo","Form","Header","FilterButton","URI","FILTER_MAP","All","Completed","task","isComplete","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","taskById","setTaskById","filter","setFilter","prevTaskLength","usePrevious","length","filterList","map","name","taskList","content","title","id","toggleTaskCompleted","deleteTask","editTask","taskNoun","remainingTasks","fetchTodos","apiUrl","response","fetch","json","fetchTodoById","console","log","todo","addTask","newTask","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","newTodo","updatedTask","value","ref","current","listHeadingRef","focus"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport FilterButton from './components/FilterButton';\nimport './App.css';\n\nconst URI = `http://localhost:5000/api/todoitems/`;\n\nconst FILTER_MAP = {\n  All: () => true,\n  Completed: task => task.isComplete,\n  Todo: task => !task.isComplete\n}\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n\n  const [tasks, setTasks] = useState([]);\n  const [taskById, setTaskById] = useState({});\n  const [filter, setFilter] = useState('All');\n\n  const prevTaskLength = usePrevious(tasks.length);\n     \n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton \n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map(task => (\n      <Todo \n          content={task.content}\n          title={task.title}\n          completed={task.isComplete}\n          id={task.id}\n          key={task.id}\n          toggleTaskCompleted={toggleTaskCompleted}\n          deleteTask={deleteTask}\n          editTask={editTask}\n      />\n    )\n  );\n \n  \tconst taskNoun = taskList.length > 1 ? 'tasks' : 'task'; \n  \tconst remainingTasks = `${taskList.length}  ${taskNoun} remaining`;\n\t \n\tasync function fetchTodos() {\n\t\tconst apiUrl = URI;\n\t\tconst response = await fetch(apiUrl)\n\t\tconst json = await response.json()\n\t\tsetTasks(json);\n\t}\n\n\tasync function fetchTodoById(id) {\n\t\tconst apiUrl = URI + id;\n\t\tconst response = await fetch(apiUrl)\n\t\tconst json = await response.json()\n\t\tconsole.log(json);\n\t\tvar todo = { title: json.title, content: json.content, isComplete: !json.isComplete}\n\t\tconsole.log(todo);\n\t\tsetTaskById(todo);\n\t}\n\n\tasync function addTask(content, title) {\n\t\t\n\t\tconst newTask =  { title: title, content: content }\n\t\tconst response = await fetch(URI, {\n\t\t\tmethod: 'POST',\n\t\t\tmode: 'cors', \n\t\t\tcache: 'no-cache',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tredirect: 'follow',\n\t\t\treferrerPolicy: 'no-referrer', \n\t\t\tbody: JSON.stringify(newTask)\n\t\t});\n\t\tconsole.log(response.json());\n\t\tfetchTodos();\n\t}  \n      \n  \tasync function toggleTaskCompleted(id) {\n\t\tfetchTodoById(id);\n\t\tconsole.log(taskById)\n\t\tconst response = await fetch(URI + id, {\n\t\t\tmethod: 'PUT', \n\t\t\tmode: 'cors', \n\t\t\tcache: 'no-cache',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t 'Content-type': 'application/json; charset=UTF-8' \n\t\t\t},\n\t\t\tbody: JSON.stringify(taskById) \n\t});\n\t console.log(response.json());\n}\n\n  async function deleteTask(id) {\n\n\tconst response = await fetch(URI + id, {\n\t\tmethod: 'DELETE',\n\t});\n\t\n\tconsole.log(response.json());\n\tfetchTodos();\n  }\n\n  async function editTask(id, newTodo) {\n\n\tconst updatedTask =  { id: id, title: newTodo.title, content: newTodo.content }\n\tconst response = await fetch(URI + id, {\n\t\t\tmethod: 'PUT', \n\t\t\tmode: 'cors', \n\t\t\tcache: 'no-cache',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t 'Content-type': 'application/json; charset=UTF-8' \n\t\t\t},\n\t\t\tbody: JSON.stringify(updatedTask) \n\t});\n\tconsole.log(response.json());\n\tfetchTodos();\n}\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  const listHeadingRef = useRef(null);\n\n  useEffect(() => {\n\tif (tasks.length - prevTaskLength === -1) {\n\t  listHeadingRef.current.focus();\n\t}\n  }, [tasks.length, prevTaskLength]);\n\n  useEffect(() => {\n\tfetchTodos();\n  }, []);\n\n  return (\t\n    <div className=\"todoapp stack-large\">\n        <Header/>\n        <Form addTask={addTask}/>\n        {filterList}\n        <ul role=\"list\" className=\"todo-list stack-large stack-exception\" aria-labelledby=\"list-heading\">\n        <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n          {remainingTasks}\n        </h2>\n        {taskList}\n        </ul>\n      </div>\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}