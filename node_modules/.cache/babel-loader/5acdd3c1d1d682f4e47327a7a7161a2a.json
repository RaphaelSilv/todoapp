{"ast":null,"code":"var _jsxFileName = \"/home/drawbridge/Documents/csharp/Todo-Back-Front/Todo-App/react-todo-frontend/src/components/Todo.js\";\nimport React, { useState } from 'react';\nconst [isEditing, setEditing] = useState(false);\nexport default function Todo(props) {\n  const editingTemplate = /*#__PURE__*/React.createElement(\"form\", {\n    className: \"stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"New content for \", props.content), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    className: \"todo-text\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn todo-cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Cancel\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"renaming \", props.content))));\n  const viewTemplate = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"todo stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: \"checkbox\",\n    onChange: () => props.fetchTodoItems,\n    onChange: () => props.toggleTaskCompleted(props.id),\n    defaultChecked: props.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-username\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, props.title, \":\")), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-username\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, props.content)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn\",\n    onClick: () => props.editTask(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 18\n    }\n  }, props.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => props.deleteTask(props.id),\n    className: \"btn btn__danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Delete \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }\n  }, props.name))));\n}","map":{"version":3,"sources":["/home/drawbridge/Documents/csharp/Todo-Back-Front/Todo-App/react-todo-frontend/src/components/Todo.js"],"names":["React","useState","isEditing","setEditing","Todo","props","editingTemplate","id","content","viewTemplate","fetchTodoItems","toggleTaskCompleted","completed","title","editTask","name","deleteTask"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst [isEditing, setEditing] = useState(false);\n\nexport default function Todo(props) {\n\n  const editingTemplate = (\n    <form className=\"stack-small\">\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New content for {props.content}\n        </label>\n        <input id={props.id} className=\"todo-text\" type=\"text\"/>\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn todo-cancel\">\n          Cancel\n        <span className=\"visually-hidden\">renaming {props.content}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n      <input/>\n      </div>\n    </div>\n  );\n\n  return (\n        <li className=\"todo stack-small\">\n        <div className=\"c-cb\">\n            <input id={props.id} type=\"checkbox\" onChange={() => props.fetchTodoItems} onChange={( )=> props.toggleTaskCompleted(props.id)} defaultChecked={props.completed} />\n            <label className=\"todo-username\" htmlFor={props.id}>\n                <b>{props.title}:</b>\n            </label>\n            <label className=\"todo-username\" htmlFor={props.id}>\n                {props.content}\n            </label>\n        </div>\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn\" onClick={() => props.editTask(props.id)}>\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button type=\"button\" onClick={() => props.deleteTask(props.id)} className=\"btn btn__danger\">\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n      </li>\n    );\n}"]},"metadata":{},"sourceType":"module"}