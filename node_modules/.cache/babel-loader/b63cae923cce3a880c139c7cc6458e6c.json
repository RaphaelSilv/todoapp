{"ast":null,"code":"var _jsxFileName = \"/home/drawbridge/Documents/react/react-hooks/react-counter/src/App.js\";\nimport React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport FilterButton from './components/FilterButton';\nimport './App.css';\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const taskList = tasks.map(task => /*#__PURE__*/React.createElement(Todo, {\n    name: task.name,\n    id: task.id,\n    completed: task.completed,\n    key: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n  const taskNoun = taskList.length > 1 ? 'tasks' : 'task';\n  const remainingTasks = `${taskList.length}  ${taskNoun} remaining`;\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updateTask = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updateTask);\n  }\n\n  function deleteTask(id) {\n    const deletedTask = tasks.filter(task => {\n      if (id === task.id) {\n        return {\n          deletedTask\n        };\n      }\n\n      return tasks;\n    });\n    setTasks(deleteTask);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoapp stack-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    name: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    name: \"Completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FilterButton, {\n    name: \"To do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, remainingTasks), /*#__PURE__*/React.createElement(\"ul\", {\n    role: \"list\",\n    className: \"todo-list stack-large stack-exception\",\n    \"aria-labelledby\": \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, taskList));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/drawbridge/Documents/react/react-hooks/react-counter/src/App.js"],"names":["React","useState","nanoid","Todo","Form","Header","FilterButton","App","props","tasks","setTasks","taskList","map","task","name","id","completed","toggleTaskCompleted","deleteTask","taskNoun","length","remainingTasks","addTask","newTask","updateTask","deletedTask","filter"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport Header from './components/Header';\nimport FilterButton from './components/FilterButton';\n\nimport './App.css';\n\n  function App(props) {\n    const [tasks, setTasks] = useState(props.tasks);\n    \n    const taskList = tasks.map(task => (\n      <Todo \n          name={task.name}\n          id={task.id}\n          completed={task.completed}\n          key={task.id}\n          toggleTaskCompleted={toggleTaskCompleted}\n          deleteTask={deleteTask}\n          />\n        )\n      );\n  \n  const taskNoun = taskList.length > 1 ? 'tasks' : 'task'; \n  const remainingTasks = `${taskList.length}  ${taskNoun} remaining`;\n      \n  function addTask(name) {\n    const newTask =  { id: \"todo-\" + nanoid(), name: name, completed: false }\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updateTask = tasks.map(task => {\n      if(id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updateTask);\n  }\n\n  function deleteTask(id) {\n    const deletedTask = tasks.filter(task => {\n      if(id === task.id) {\n        return {deletedTask};\n      }\n      return tasks;\n    });\n    setTasks(deleteTask);\n  }\n  return (\n\n    <div className=\"todoapp stack-large\">\n        <Header/>\n        <Form addTask={addTask}/>\n        <FilterButton name=\"All\"/>\n        <FilterButton name=\"Completed\"/>\n        <FilterButton name=\"To do\"/>\n\n        <h2 id=\"list-heading\">\n          {remainingTasks}\n        </h2>\n        <ul\n          role=\"list\"\n          className=\"todo-list stack-large stack-exception\"\n          aria-labelledby=\"list-heading\"\n        >\n          {taskList}\n\n        </ul>\n      </div>\n    );\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}