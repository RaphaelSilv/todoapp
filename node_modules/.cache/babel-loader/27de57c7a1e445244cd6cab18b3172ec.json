{"ast":null,"code":"var _jsxFileName = \"/home/drawbridge/Documents/csharp/Todo-Back-Front/todo-frontend/src/components/Todo.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newContent, setNewContent] = useState(props.content);\n  const [newTitle, setNewTitle] = useState(props.title);\n  const [timezoneId, setTimezone] = useState(props.timezoneId);\n  const editInputFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n\n  function handleContentUpdate(e) {\n    setNewContent(e.target.value);\n  }\n\n  function handleTitleUpdate(e) {\n    setNewTitle(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var updatedTodo = {\n      title: newTitle,\n      content: newContent\n    };\n    props.editTask(props.id, updatedTodo);\n    setNewContent('');\n    setNewTitle('');\n    setTimezone('');\n    setEditing(false);\n  }\n\n  const editingTemplate = /*#__PURE__*/React.createElement(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"New title for: \", props.title), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    className: \"todo-text\",\n    type: \"text\",\n    value: newTitle,\n    onChange: handleTitleUpdate,\n    ref: editInputFieldRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"New content for: \", props.content), /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    className: \"todo-text\",\n    type: \"text\",\n    value: newContent,\n    onChange: handleContentUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, \"New timezone for: \", props.timezoneId), /*#__PURE__*/React.createElement(DropdownMenu, {\n    itemTitle: \"Select your timezone\",\n    items: timezones,\n    onClick: tz => setTimezone(tz.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setEditing(false),\n    className: \"btn todo-cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Cancel\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"renaming \", props.content)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn__primary todo-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Save\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"new name for \", props.name))));\n  const viewTemplate = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stack-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-cb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input__checkbox\",\n    id: props.id,\n    type: \"checkbox\",\n    defaultChecked: props.completed,\n    onChange: () => props.toggleTaskCompleted(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, props.title, \":\")), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"todo-label\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, props.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timezone-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"timezone\",\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }\n  }, 'Last updated: ' + props.lastUpdated + '  Timezone: ' + props.timezoneId))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn\",\n    onClick: () => setEditing(true),\n    ref: editButtonRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 18\n    }\n  }, props.content)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn__danger\",\n    onClick: () => props.deleteTask(props.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Delete \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"visually-hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 20\n    }\n  }, props.content))));\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editInputFieldRef.current.focus();\n    }\n\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [isEditing, wasEditing]);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, isEditing ? editingTemplate : viewTemplate);\n}","map":{"version":3,"sources":["/home/drawbridge/Documents/csharp/Todo-Back-Front/todo-frontend/src/components/Todo.js"],"names":["React","useState","useEffect","useRef","usePrevious","value","ref","current","Todo","props","isEditing","setEditing","newContent","setNewContent","content","newTitle","setNewTitle","title","timezoneId","setTimezone","editInputFieldRef","editButtonRef","wasEditing","handleContentUpdate","e","target","handleTitleUpdate","handleSubmit","preventDefault","updatedTodo","editTask","id","editingTemplate","timezones","tz","name","viewTemplate","completed","toggleTaskCompleted","lastUpdated","deleteTask","focus"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction usePrevious(value) {\n\tconst ref = useRef();\n\tuseEffect(() => {\n\t  ref.current = value;\n\t});\n\treturn ref.current;\n}\n\nexport default function Todo(props) {\n  \n  const [isEditing, setEditing] = useState(false);\n  const [newContent, setNewContent] = useState(props.content);\n  const [newTitle, setNewTitle] = useState(props.title);\n  const [timezoneId,  setTimezone] = useState(props.timezoneId);\n\n  const editInputFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleContentUpdate(e) {\n    setNewContent(e.target.value);\n  }\n\n  function handleTitleUpdate(e) {\n    setNewTitle(e.target.value);\n  }\n  \n  function handleSubmit(e) {\n\te.preventDefault();\n\tvar updatedTodo = {title: newTitle, content: newContent}\n    props.editTask(props.id, updatedTodo);\n    setNewContent('');\n    setNewTitle('');\n    setTimezone('');\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New title for: {props.title}\n        </label>\n        <input id={props.id}\n\t\t\tclassName=\"todo-text\"\n\t\t\ttype=\"text\"\n\t\t\tvalue={newTitle}\n\t\t\tonChange={handleTitleUpdate}\n          ref={editInputFieldRef}\n        />\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New content for: {props.content}\n        </label>\n\t\t<input id={props.id} \n\t\t\tclassName=\"todo-text\" \n\t\t\ttype=\"text\" \n\t\t\tvalue={newContent} \n\t\t\tonChange={handleContentUpdate}\n\t\t/>\n\t\t<label className=\"todo-label\" htmlFor={props.id}>\n          New timezone for: {props.timezoneId}\n        </label>\n\t\t<DropdownMenu\n\t\t\titemTitle=\"Select your timezone\"\n\t\t\titems={timezones}\t\t\n\t\t\tonClick={(tz) => setTimezone(tz.id)}\n\t\t/>\n      </div>\n      <div className=\"btn-group\">\n        <button type=\"button\" onClick={() => setEditing(false)} className=\"btn todo-cancel\">\n          Cancel\n        <span className=\"visually-hidden\">renaming {props.content}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n        <span className=\"visually-hidden\">new name for {props.name}</span>\n      </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n\t\t  \tclassName=\"input__checkbox\"\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            <b>{props.title}:</b>\n          </label>\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.content}\n          </label>\n\t\t  <div className=\"timezone-label\">\n\t\t\t<label id=\"timezone\" htmlFor={props.id}>\n\t\t\t\t{ 'Last updated: ' + props.lastUpdated + '  Timezone: ' + props.timezoneId}\n\t\t\t</label>\n\t\t  </div>\n        </div>\n        <div className=\"btn-group\">\n          <button \n            type=\"button\"\n            className=\"btn\"\n            onClick={() => setEditing(true)}\n            ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{props.content}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.content}</span>\n          </button>\n        </div>\n    </div>\n  );\n  \n  useEffect(() => {\n    if(!wasEditing && isEditing) {\n      editInputFieldRef.current.focus();\n    } \n    if(wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [isEditing, wasEditing]);\n  \n  return (\n    <li className=\"todo\">\n      {isEditing ? editingTemplate : viewTemplate}\n    </li>\n  );\n}"]},"metadata":{},"sourceType":"module"}